plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.tempera'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.31'
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
}

apply plugin: 'java'

javadoc {
	options.charSet = 'UTF-8'
	options.encoding = 'UTF-8'
	failOnError false
}

task stage(dependsOn: ['bootJar'])

tasks.stage.doLast() {
	delete fileTree(dir: "build/distributions")
	delete fileTree(dir: "build/assetCompile")
	delete fileTree(dir: "build/distributions")
	delete fileTree(dir: "build/libs", exclude: "*.jar") //delete everything except jar file inside build folder
}

jar { //Don't package test folders and files
	exclude "test/**"
	exclude "test/**/**"
}

build.mustRunAfter clean //First clean then build to avoid cache issues etc

gradle.taskGraph.whenReady {
	taskGraph ->
		if (taskGraph.hasTask(stage)) { //Don't run test on heroku
			test.enabled = false
		}
}

bootJar { //Exclude test files when pack boot jar file
	enabled = true
	classifier = 'boot'
	exclude "test/**"
	exclude "test/**/**"
}

tasks.named('test') {
	useJUnitPlatform()
}
